name: Docker

on:
  push:
    branches: ["main"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["main"]

env:
  # eg. linux/amd64,linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/386,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6
  BUILD_PLATFORMS: linux/amd64,linux/arm64

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Node.js
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version-file: ".nvmrc"
          check-latest: true

      - run: npm ci
      - run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0
        with:
          cosign-release: "v2.2.4"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Log into Docker Hub Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DHUB_USERNAME }}
          password: ${{ secrets.DHUB_PASSWORD }}

      - name: Compose GitHub Container Repository image name
        run: echo "GHCR_IMAGE_NAME=$GH_REPO_OWNER/${GH_REPO_NAME#container-}" >> $GITHUB_ENV
        env:
          GH_REPO_OWNER: ${{ github.repository_owner }}
          GH_REPO_NAME: ${{ github.event.repository.name }}

      - name: Compose Docker Hub repository image name
        run: echo "DHUB_IMAGE_NAME=$DH_USERNAME/${GH_REPO_NAME#container-}" >> $GITHUB_ENV
        env:
          DH_USERNAME: ${{ secrets.DHUB_USERNAME }}
          GH_REPO_NAME: ${{ github.event.repository.name }}

      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find out InvoiceNinja version
        run: |
          v=$(scripts/invoiceninja-version.sh src); va=( ${v//./ } )
          echo "IN_VERSION=$v" >> $GITHUB_ENV
          echo "IN_MAJOR=${va[0]}" >> $GITHUB_ENV
          echo "IN_MINOR=${va[1]}" >> $GITHUB_ENV
          echo "IN_PATCH=${va[2]}" >> $GITHUB_ENV

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: |
            name=${{ env.DHUB_IMAGE_NAME }}
            name=ghcr.io/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            type=edge
            type=semver,pattern=${{ env.IN_VERSION }}+{{version}}
            type=semver,pattern=${{ env.IN_MAJOR }}.${{ env.IN_MINOR }}+{{version}}
            type=semver,pattern=${{ env.IN_MAJOR }}+{{version}},enable=${{ env.IN_MAJOR != 0 }}
            type=semver,pattern=${{ env.IN_VERSION }}
            type=semver,pattern=${{ env.IN_MAJOR }}.${{ env.IN_MINOR }}
            type=semver,pattern=${{ env.IN_MAJOR }},enable=${{ env.IN_MAJOR != 0 }}

      - name: Build and push Docker images
        id: build-and-push
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 # v6.10.0
        with:
          context: src
          platforms: ${{ env.BUILD_PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker images
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Update Docker Hub repository description
        if: ${{ github.event_name != 'pull_request' }}
        uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4.0.0
        with:
          username: ${{ secrets.DHUB_USERNAME }}
          password: ${{ secrets.DHUB_PASSWORD }}
          repository: ${{ env.DHUB_IMAGE_NAME }}
          readme-filepath: ./CONTAINER.md
